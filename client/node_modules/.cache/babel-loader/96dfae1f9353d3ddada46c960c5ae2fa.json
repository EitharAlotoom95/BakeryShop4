{"ast":null,"code":"// import React from 'react'\n// import { useHistory } from 'react-router-dom'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Container from '@material-ui/core/Container';\n// import Table from '@material-ui/core/Table'\n// import TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\n// import TableContainer from '@material-ui/core/TableContainer'\n// import TableHead from '@material-ui/core/TableHead'\n// import TableRow from '@material-ui/core/TableRow'\n// import Paper from '@material-ui/core/Paper'\n// import DeleteIcon from '@material-ui/icons/Delete'\n// import IconButton from '@material-ui/core/IconButton'\n// import Typography from '@material-ui/core/Typography';\n// import Button from \"@material-ui/core/Button\"\n// import ShopContext from '../context/shop-context'\n// const TAX_RATE = 0.08\n// const useStyles = makeStyles(theme => ({\n//   table: {\n//     width: 100,\n//   },\n//   title: {\n//     flex: '1 1 100%',\n//     padding: '1rem'\n//   },\n//   container: {\n//     marginTop: '3.3rem'\n//   },\n//   button: {\n//     marginTop: theme.spacing(6),\n//     marginLeft: theme.spacing(86),\n//     color:\"white\",\n//     background:\"rgba(0, 0, 0, 0.95)\",\n//     width:\"150px\",\n//     height:\"67px\"\n//   },\n//   na:{\n//     fontSize:24,\n//   }\n// }));\n// function ccyFormat(num) {\n//   return `${num.toFixed(2)} JOD`\n// }\n// function subtotal(items) {\n//   return  items.map(({ price, quantity}) => price * quantity).reduce((sum, i) => sum + i, 0)\n// }\n// export default function SpanningTable() {\n//   const classes = useStyles()\n//   const order = () => {\n//     window.location = \"/checkOutForm\";\n//      //alert(value)\n//   };\n//   const context = React.useContext(ShopContext)\n//   const history = useHistory()\n//   const [cartItems, setCartItems] = React.useState(JSON.parse(localStorage.getItem(\"cart\"))|| [])\n//   let invoiceSubtotal = subtotal(cartItems)\n//   let invoiceTaxes = TAX_RATE * invoiceSubtotal\n//   let invoiceTotal = invoiceTaxes + invoiceSubtotal\n//   let localCart = localStorage.getItem(\"cart\");\n//   React.useEffect(() => {\n//     // there is no token, redirect to login page\n//     if (localStorage.getItem('loggedInToken') === null) {\n//       history.push('/login')\n//     }\n//     //turn it into js\n//     localCart = JSON.parse(localCart);\n//     // //load persisted cart into state if it exists\n//     if (localCart) {\n//       setCartItems(localCart)\n//       invoiceSubtotal = subtotal(localCart)\n//     }\n//   }, [localCart])\n//   return (\n//     <div>\n//     <div>\n//     <section>\n//       <Container className={classes.container}>\n//         <TableContainer component={Paper}>\n//           <Table className={classes.table} aria-label=\"spanning table\">\n//             <TableHead>\n//                 {/* <TableCell align=\"right\">Action</TableCell> */}\n//               <TableRow>\n//                 <TableCell className={classes.na}>Product</TableCell>\n//                 <TableCell >Quantity</TableCell>\n//                 <TableCell >Price</TableCell>\n//                 {/* <TableCell align=\"right\">Unit</TableCell> */}\n//                 {/* <TableCell align=\"right\">Sum</TableCell> */}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {cartItems.length > 0 && cartItems.map((cartItem, idx) => (\n//                 <TableRow key={idx}>\n//                   <TableCell>{cartItem.name}</TableCell>\n//                   <TableCell  >{cartItem.quantity}</TableCell>\n//                   <TableCell>{cartItem.price}jd</TableCell>\n//                   {/* <TableCell align=\"right\">{ccyFormat(cartItem.price * cartItem.quantity)}</TableCell> */}\n//                   <TableCell >\n//                   <IconButton onClick={context.removeProductFromCart.bind(this, cartItem._id)}>\n//                     <DeleteIcon className={classes.icon} />\n//                   </IconButton>\n//                   </TableCell>\n//                 </TableRow>\n//               ))}\n//               {cartItems.length > 0 && (\n//               <>\n//                 {/* <TableRow>\n//                   <TableCell rowSpan={3} />\n//                   <TableCell colSpan={2}>Subtotal</TableCell>\n//                   <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n//                 </TableRow>\n//                <TableRow>\n//                   <TableCell>Tax</TableCell>\n//                   <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n//                   <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n//                 </TableRow>\n//                 <TableRow>\n//                   <TableCell colSpan={2}>Total</TableCell>\n//                   <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n//                 </TableRow> */}\n//               </>\n//               )}\n//               {cartItems.length < 1 && (\n//                 <Typography className={classes.title} variant=\"p\" id=\"tableTitle\" component=\"p\">\n//                   No item in your shopping cart\n//                 </Typography>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//     </Container>  \n//     </section>\n//     </div>\n//     <div>\n//     <Button\n//         size=\"large\"\n//         variant=\"contained\"\n//         className={classes.button}\n//         component=\"a\"\n//         onClick={order}\n//       >\n// Next     </Button>\n//     </div>\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/component/Cart.js"],"names":[],"mappingssourcesContent":["// import React from 'react'\n// import { useHistory } from 'react-router-dom'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Container from '@material-ui/core/Container';\n// import Table from '@material-ui/core/Table'\n// import TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\n// import TableContainer from '@material-ui/core/TableContainer'\n// import TableHead from '@material-ui/core/TableHead'\n// import TableRow from '@material-ui/core/TableRow'\n// import Paper from '@material-ui/core/Paper'\n// import DeleteIcon from '@material-ui/icons/Delete'\n// import IconButton from '@material-ui/core/IconButton'\n// import Typography from '@material-ui/core/Typography';\n// import Button from \"@material-ui/core/Button\"\n// import ShopContext from '../context/shop-context'\n// const TAX_RATE = 0.08\n// const useStyles = makeStyles(theme => ({\n//   table: {\n//     width: 100,\n//   },\n//   title: {\n//     flex: '1 1 100%',\n//     padding: '1rem'\n//   },\n//   container: {\n//     marginTop: '3.3rem'\n//   },\n//   button: {\n//     marginTop: theme.spacing(6),\n//     marginLeft: theme.spacing(86),\n//     color:\"white\",\n//     background:\"rgba(0, 0, 0, 0.95)\",\n//     width:\"150px\",\n//     height:\"67px\"\n//   },\n//   na:{\n//     fontSize:24,\n\n//   }\n// }));\n\n// function ccyFormat(num) {\n//   return `${num.toFixed(2)} JOD`\n// }\n// function subtotal(items) {\n//   return  items.map(({ price, quantity}) => price * quantity).reduce((sum, i) => sum + i, 0)\n// }\n// export default function SpanningTable() {\n//   const classes = useStyles()\n//   const order = () => {\n  \n//     window.location = \"/checkOutForm\";\n//      //alert(value)\n//   };\n//   const context = React.useContext(ShopContext)\n//   const history = useHistory()\n//   const [cartItems, setCartItems] = React.useState(JSON.parse(localStorage.getItem(\"cart\"))|| [])\n//   let invoiceSubtotal = subtotal(cartItems)\n//   let invoiceTaxes = TAX_RATE * invoiceSubtotal\n//   let invoiceTotal = invoiceTaxes + invoiceSubtotal\n//   let localCart = localStorage.getItem(\"cart\");\n//   React.useEffect(() => {\n//     // there is no token, redirect to login page\n//     if (localStorage.getItem('loggedInToken') === null) {\n//       history.push('/login')\n//     }\n//     //turn it into js\n//     localCart = JSON.parse(localCart);\n//     // //load persisted cart into state if it exists\n//     if (localCart) {\n//       setCartItems(localCart)\n//       invoiceSubtotal = subtotal(localCart)\n//     }\n//   }, [localCart])\n//   return (\n//     <div>\n//     <div>\n//     <section>\n//       <Container className={classes.container}>\n//         <TableContainer component={Paper}>\n//           <Table className={classes.table} aria-label=\"spanning table\">\n//             <TableHead>\n              \n              \n//                 {/* <TableCell align=\"right\">Action</TableCell> */}\n              \n//               <TableRow>\n//                 <TableCell className={classes.na}>Product</TableCell>\n//                 <TableCell >Quantity</TableCell>\n//                 <TableCell >Price</TableCell>\n//                 {/* <TableCell align=\"right\">Unit</TableCell> */}\n//                 {/* <TableCell align=\"right\">Sum</TableCell> */}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {cartItems.length > 0 && cartItems.map((cartItem, idx) => (\n//                 <TableRow key={idx}>\n               \n//                   <TableCell>{cartItem.name}</TableCell>\n//                   <TableCell  >{cartItem.quantity}</TableCell>\n//                   <TableCell>{cartItem.price}jd</TableCell>\n//                   {/* <TableCell align=\"right\">{ccyFormat(cartItem.price * cartItem.quantity)}</TableCell> */}\n//                   <TableCell >\n//                   <IconButton onClick={context.removeProductFromCart.bind(this, cartItem._id)}>\n//                     <DeleteIcon className={classes.icon} />\n//                   </IconButton>\n//                   </TableCell>\n//                 </TableRow>\n//               ))}\n//               {cartItems.length > 0 && (\n//               <>\n//                 {/* <TableRow>\n//                   <TableCell rowSpan={3} />\n//                   <TableCell colSpan={2}>Subtotal</TableCell>\n//                   <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n//                 </TableRow>\n//                <TableRow>\n//                   <TableCell>Tax</TableCell>\n//                   <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n//                   <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n//                 </TableRow>\n//                 <TableRow>\n//                   <TableCell colSpan={2}>Total</TableCell>\n//                   <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n//                 </TableRow> */}\n//               </>\n//               )}\n//               {cartItems.length < 1 && (\n//                 <Typography className={classes.title} variant=\"p\" id=\"tableTitle\" component=\"p\">\n//                   No item in your shopping cart\n//                 </Typography>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//     </Container>  \n//     </section>\n//     </div>\n//     <div>\n//     <Button\n        \n//         size=\"large\"\n//         variant=\"contained\"\n//         className={classes.button}\n//         component=\"a\"\n//         onClick={order}\n//       >\n// Next     </Button>\n//     </div>\n//     </div>\n//   )\n// }"]},"metadata":{},"sourceType":"module"}