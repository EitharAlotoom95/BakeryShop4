{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baker\\\\Desktop\\\\BakeryShop4\\\\client\\\\src\\\\component\\\\location.js\";\n// // import React from \"react\";\n// // import axios from \"axios\";\n// // import Avatar from \"@material-ui/core/Avatar\";\n// // import Button from \"@material-ui/core/Button\";\n// // import CssBaseline from \"@material-ui/core/CssBaseline\";\n// // import TextField from \"@material-ui/core/TextField\";\n// // import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// // import Checkbox from \"@material-ui/core/Checkbox\";\n// // import Link from \"@material-ui/core/Link\";\n// // import Grid from \"@material-ui/core/Grid\";\n// // import Box from \"@material-ui/core/Box\";\n// // import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n// // import Typography from \"@material-ui/core/Typography\";\n// // import { makeStyles } from \"@material-ui/core/styles\";\n// // import Container from \"@material-ui/core/Container\";\n// // import AddLocationIcon from '@material-ui/icons/AddLocation';\n// // import MenuItem from '@material-ui/core/MenuItem'\n// // import {\n// //     fade,\n// //     ThemeProvider,\n// //     withStyles,\n// //     createMuiTheme,\n// //   } from '@material-ui/core/styles';\n// //   import InputBase from '@material-ui/core/InputBase';\n// //   import InputLabel from '@material-ui/core/InputLabel';\n// //   import FormControl from '@material-ui/core/FormControl';\n// //   import { green } from '@material-ui/core/colors';\n// //   import FormHelperText from '@material-ui/core/FormHelperText';\n// //   import Select from '@material-ui/core/Select';\n// //   import NativeSelect from '@material-ui/core/NativeSelect';\n// // function Copyright() {\n// //   return (\n// //     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n// //       {\"Copyright Â© \"}\n// //       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n// //         Your Website\n// //       </Link>{\" \"}\n// //       {new Date().getFullYear()}\n// //       {\".\"}\n// //     </Typography>\n// //   );\n// // }\n// // const useStyles = makeStyles((theme) => ({\n// //   paper: {\n// //     marginTop: theme.spacing(8),\n// //     display: \"flex\",\n// //     flexDirection: \"column\",\n// //     alignItems: \"center\",\n// //   },\n// //   avatar: {\n// //     margin: theme.spacing(1),\n// //     background:\"rgba(0, 0, 0, 0.94)\",\n// //   },\n// //   form: {\n// //     width: \"100%\", // Fix IE 11 issue.\n// //     marginTop: theme.spacing(3),\n// //   },\n// //   submit: {\n// //     margin: theme.spacing(3, 0, 2),\n// //     background:\"rgba(0, 0, 0, 0.79)\",\n// //     color:\"white\"\n// //   },\n// //   city:{\n// //       width:\"395px\",\n// //   }\n// // }));\n// // export default function Wtem() {\n// //   const classes = useStyles();\n// //   const [values, setValues] = React.useState({\n// //   City: \" \",\n// //    Area:\" \" ,\n// //    RoadName: \" \",\n// //    BuildingNumber:\" \",\n// //    Floor:\" \",\n// //    DeliveryInstructions:\" \",\n// //   });\n// //   const ValidationTextField = withStyles({\n// //     root: {\n// //       '& input:valid + fieldset': {\n// //         borderColor: 'green',\n// //         borderWidth: 2,\n// //       },\n// //       '& input:invalid + fieldset': {\n// //         borderColor: 'red',\n// //         borderWidth: 2,\n// //       },\n// //       '& input:valid:focus + fieldset': {\n// //         borderLeftWidth: 6,\n// //         padding: '4px !important', // override inline-style\n// //       },\n// //     },\n// //   })(TextField);\n// //   const handleChange = (prop) => (event) => {\n// //     setValues({ ...values, [prop]: event.target.value });\n// //   };\n// //   const onSubmit = (e) => {\n// //     e.preventDefault();\n// //    var City = document.getElementById(\"City\").value;\n// //     var Area = document.getElementById(\"Area\").value;\n// //     var RoadName = document.getElementById(\"RoadName\").value;\n// //     var BuildingNumber = document.getElementById(\"BuildingNumber\").value;\n// //      var Floor = document.getElementById(\"Floor\").value;\n// //      var DeliveryInstructions=document.getElementById(\"DeliveryInstructions\").value;\n// //     const locations = {\n// //      City:City,\n// //       Area:Area,\n// //       RoadName:RoadName,\n// //       BuildingNumber:BuildingNumber,\n// //       Floor:Floor,\n// //       DeliveryInstructions:DeliveryInstructions\n// //       // email: email,\n// //       // password: password,\n// //     };\n// //     console.log(locations)\n// //     //console.log(user)\n// //     axios\n// //        .post(\"http://localhost:7000/api/location\", locations)\n// //  .then((res) => {\n// //     console.log(res.data);\n// //     if(res.date === \"done\"){\n// //         alert('ok')\n// //       }\n// //   }).catch((error) => {\n// //        alert(\"try again \")\n// //       console.log(error)\n// //   });\n// //   };\n// //   return (\n// //     <Container component=\"main\" maxWidth=\"xs\">\n// //       <CssBaseline />\n// //       <div className={classes.paper}>\n// //         <Avatar className={classes.avatar}>\n// //             <AddLocationIcon/>\n// //         </Avatar>\n// //         <Typography component=\"h1\" variant=\"h5\">\n// //          Add location\n// //          </Typography>\n// //         {/* <form className={classes.form} onSubmit={onSubmit} noValidate>\n// //         <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //               <TextField\n// //                 value={values.City}\n// //                 onChange={handleChange(\"City\")}\n// //                 autoComplete=\"fname\"\n// //                 name=\"City\"\n// //                 variant=\"outlined\"\n// //                 required\n// //                 fullWidth\n// //                 id=\"City\"\n// //                 label=\"City\"\n// //                 autoFocus\n// //               />\n// //             </Grid>\n// //   </Grid> */ }\n// //               <form className={classes.form} onSubmit={onSubmit} noValidate>\n// //           <Grid container spacing={2}>\n// //             <Grid item xs={12}>\n// //               <FormControl variant=\"filled\" className={classes.formControl}>\n// //                 <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\n// //                 <Select\n// //                   labelId=\"demo-simple-select-label\"\n// //                   id=\"demo-simple-select\"\n// //                   value={values.city}\n// //                   onChange={handleChange('city')}\n// //                 >\n// //                   <MenuItem value=\"Amman\">Amman</MenuItem>\n// //                   <MenuItem value=\"Zarqa\">Zarqa</MenuItem>\n// //                   <MenuItem value=\"Salt\">Salt</MenuItem>\n// //                 </Select>\n// //               </FormControl>\n// //             </Grid>\n// //           </Grid>\n// //           {/* <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //             <FormControl className={classes.city}>\n// //          <InputLabel  value= {values.City}>City</InputLabel>\n// //         <NativeSelect\n// //         required >\n// //           <option aria-label=\"None\" value=\"\" />\n// //           <option value={\"Amman\"}>Amman</option>\n// //           <option value={\"Zarqa\"}>Zarqa</option>\n// //           <option value={\"Salt\"}>Salt</option>\n// //         </NativeSelect> \n// //         <FormHelperText>Choose your city</FormHelperText>\n// //       </FormControl>\n// //             </Grid>\n// //             </Grid> */}\n// //             <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //               <TextField\n// //                 value={values.Area}\n// //                 onChange={handleChange(\"Area\")}\n// //                 autoComplete=\"fname\"\n// //                 name=\"Area\"\n// //                 variant=\"outlined\"\n// //                 required\n// //                 fullWidth\n// //                 id=\"Area\"\n// //                 label=\"Area\"\n// //                 autoFocus\n// //               />\n// //             </Grid>\n// //             </Grid>\n// //             <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //               <TextField \n// //                 value={values.RoadName}\n// //                 onChange={handleChange(\"RoadName\")}\n// //                 name=\"Road Name\"\n// //                 variant=\"outlined\"\n// //                 autoComplete=\"fname\"\n// //                 required\n// //                 fullWidth\n// //                 id=\"RoadName\"\n// //                 label=\"Road Name\"\n// //                 autoFocus\n// //               />\n// //             </Grid>\n// //             </Grid>\n// //             <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //               <TextField\n// //                 value={values.BuildingNumber}\n// //                 onChange={handleChange(\"BuildingNumber\")}\n// //                 autoComplete=\"fname\"\n// //                 name=\"Building Number\"\n// //                 variant=\"outlined\"\n// //                 required\n// //                 fullWidth\n// //                 id=\"BuildingNumber\"\n// //                 label=\"Building Number\"\n// //                 autoFocus\n// //               />\n// //             </Grid>\n// //             </Grid>\n// //              <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //               <TextField\n// //                 value={values.floor}\n// //                 onChange={handleChange(\"Floor\")}\n// //                 autoComplete=\"fname\"\n// //                 name=\"Floor\"\n// //                 variant=\"outlined\"\n// //                 required\n// //                 fullWidth\n// //                 id=\"Floor\"\n// //                 label=\"Floor\"\n// //                 autoFocus\n// //               />\n// //             </Grid>\n// //             </Grid>\n// //             <Grid container spacing={2}>\n// //             <Grid item xs={12} >\n// //               <TextField\n// //                 value={values.DeliveryInstructions}\n// //                 onChange={handleChange(\"DeliveryInstructions\")}\n// //                 autoComplete=\"fname\"\n// //                 name=\"Delivery Instructions\"\n// //                 variant=\"outlined\"\n// //                 fullWidth\n// //                 id=\"DeliveryInstructions\"\n// //                 label=\"Delivery Instructions:\"\n// //                 autoFocus\n// //               />\n// //             </Grid>\n// //             </Grid>\n// //           <Button\n// //             type=\"submit\"\n// //             fullWidth\n// //             variant=\"contained\"\n// //             color=\"primary\" \n// //             className={classes.submit}\n// //           >\n// //           Set location\n// //           </Button>\n// //           <Grid container justify=\"flex-end\">\n// //             <Grid item>\n// //             </Grid>\n// //             <Grid item>\n// //               <p id=\"accoutCreated\"></p>\n// //             </Grid>\n// //           </Grid>\n// //         </form>\n// //       </div>\n// //       <Box mt={5}>\n// //         <Copyright />\n// //       </Box>\n// //     </Container>\n// //   );\n// // }\n// import React from 'react'\n// import axios from 'axios'\n// import { useHistory } from 'react-router-dom'\n// import Avatar from '@material-ui/core/Avatar'\n// import Button from '@material-ui/core/Button'\n// import Snackbar from '@material-ui/core/Snackbar';\n// import CssBaseline from '@material-ui/core/CssBaseline'\n// import TextField from '@material-ui/core/TextField'\n// import FormControlLabel from '@material-ui/core/FormControlLabel'\n// import FormControl from '@material-ui/core/FormControl'\n// import InputLabel from '@material-ui/core/InputLabel'\n// import Select from '@material-ui/core/Select'\n// import MenuItem from '@material-ui/core/MenuItem'\n// import Checkbox from '@material-ui/core/Checkbox'\n// import Link from '@material-ui/core/Link'\n// import Grid from '@material-ui/core/Grid'\n// import Box from '@material-ui/core/Box'\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n// import Typography from '@material-ui/core/Typography'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Container from '@material-ui/core/Container'\n//  import AddLocationIcon from '@material-ui/icons/AddLocation';\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright Â© '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   )\n// }\n// const useStyles = makeStyles(theme => ({\n//   formControl: {\n//     minWidth: '100%',\n//   },\n//   paper: {\n//     marginTop: theme.spacing(8),\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   },\n//   avatar: {\n//     margin: theme.spacing(1),\n//     background: 'rgba(0, 0, 0, 0.94)',\n//   },\n//   form: {\n//     width: '100%', // Fix IE 11 issue.\n//     marginTop: theme.spacing(3),\n//   },\n//   submit: {\n//     margin: theme.spacing(3, 0, 2),\n//     background: 'rgba(0, 0, 0, 0.79)',\n//     color: 'white',\n//   },\n// }))\n// export default function Item() {\n//   const classes = useStyles()\n//   const history = useHistory()\n//   const [values, setValues] = React.useState({\n//     City: \" \",\n//        Area:\" \" ,\n//        RoadName: \" \",\n//        BuildingNumber:\" \",\n//        Floor:\" \",\n//        DeliveryInstructions:\" \",\n//   })\n//   const [isOpen, setIsOpen ] = React.useState(false)\n//   const handleChange = prop => event => {\n//     setValues({ ...values, [prop]: event.target.value })\n//   }\n//   const onSubmit = async(e) => {\n//     e.preventDefault()\n//     try {\n//       const token = localStorage.getItem('loggedInToken')\n//       const { City, Area, RoadName, BuildingNumber, Floor,DeliveryInstructions } = values\n//       const locations = {\n//         City,\n//            Area ,\n//            RoadName,\n//            BuildingNumber,\n//            Floor,\n//            DeliveryInstructions,\n//       }\n//       const config = {\n//         headers: { Authorization: `Bearer ${token}` },\n//       }\n//       // const bodyParameters = {\n//       //   category,\n//       // }\n// //console.log (config)\n//    const result = await axios\n//       .post('http://localhost:7000/api/location/', locations,\n//       config)\n//       if (result.status === 201 ) {\n//         setIsOpen(true)\n//         setValues(() => ({\n//           City: \" \",\n//        Area:\" \" ,\n//        RoadName: \" \",\n//        BuildingNumber:\" \",\n//        Floor:\" \",\n//        DeliveryInstructions:\" \",\n//         }))\n//       }\n//     } catch(error){\n//         console.log(error)\n//       }\n//   }\n//   // const isInvalid =\n//   // values.name === \"\" ||\n//   // values.category  === \"\" ||\n//   // values.price === \"\" ||\n//   // values.description === \"\" ||\n//   // values.image === \"\"\n//   React.useEffect(() => {\n//     // there is no token, redirect to login page\n//     if (localStorage.getItem('loggedInToken') === null) {\n//       history.push('/login')\n//     }\n//   }, [])\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//            <CssBaseline />\n//            <div className={classes.paper}>\n//             <Avatar className={classes.avatar}>\n//                 <AddLocationIcon/>\n//           </Avatar>\n//          <Typography component=\"h1\" variant=\"h5\">\n//               Add location\n//     </Typography>\n//             {/* <form className={classes.form} onSubmit={onSubmit} noValidate>\n//              <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                   <TextField\n//                     value={values.City}\n//                     onChange={handleChange(\"City\")}\n//                     autoComplete=\"fname\"\n//                     name=\"City\"\n//                     variant=\"outlined\"\n//                     required\n//                     fullWidth\n//                     id=\"City\"\n//                     label=\"City\"\n//                     autoFocus\n//                   />\n//                 </Grid>\n//       </Grid> */ }\n//                   <form className={classes.form} onSubmit={onSubmit} noValidate>\n//               {/* <Grid container spacing={2}>\n//                 <Grid item xs={12}>\n//                   <FormControl variant=\"filled\" className={classes.formControl}>\n//                     <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\n//                     <Select\n//                       labelId=\"demo-simple-select-label\"\n//                       id=\"demo-simple-select\"\n//                       value={values.city}\n//                       onChange={handleChange('city')}\n//                     >\n//                       <MenuItem value=\"Amman\">Amman</MenuItem>\n//                       <MenuItem value=\"Zarqa\">Zarqa</MenuItem>\n//                       <MenuItem value=\"Salt\">Salt</MenuItem>\n//                     </Select>\n//                   </FormControl>\n//                 </Grid>\n//               </Grid> */}\n//               {/* <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                 <FormControl className={classes.city}>\n//              <InputLabel  value= {values.City}>City</InputLabel>\n//             <NativeSelect\n//             required >\n//               <option aria-label=\"None\" value=\"\" />\n//               <option value={\"Amman\"}>Amman</option>\n//               <option value={\"Zarqa\"}>Zarqa</option>\n//               <option value={\"Salt\"}>Salt</option>\n//             </NativeSelect> \n//             <FormHelperText>Choose your city</FormHelperText>\n//           </FormControl>\n//                 </Grid>\n//                 </Grid> */}\n//                 <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                   <TextField\n//                     value={values.Area}\n//                     onChange={handleChange(\"Area\")}\n//                     autoComplete=\"fname\"\n//                     name=\"Area\"\n//                     variant=\"outlined\"\n//                     required\n//                     fullWidth\n//                     id=\"Area\"\n//                     label=\"Area\"\n//                     autoFocus\n//                   />\n//                 </Grid>\n//                 </Grid>\n//                 <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                   <TextField \n//                     value={values.RoadName}\n//                     onChange={handleChange(\"RoadName\")}\n//                     name=\"Road Name\"\n//                     variant=\"outlined\"\n//                     autoComplete=\"fname\"\n//                     required\n//                     fullWidth\n//                     id=\"RoadName\"\n//                     label=\"Road Name\"\n//                     autoFocus\n//                   />\n//                 </Grid>\n//                 </Grid>\n//                 <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                   <TextField\n//                     value={values.BuildingNumber}\n//                     onChange={handleChange(\"BuildingNumber\")}\n//                     autoComplete=\"fname\"\n//                     name=\"Building Number\"\n//                     variant=\"outlined\"\n//                     required\n//                     fullWidth\n//                     id=\"BuildingNumber\"\n//                     label=\"Building Number\"\n//                     autoFocus\n//                   />\n//                 </Grid>\n//                 </Grid>\n//                  <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                   <TextField\n//                     value={values.floor}\n//                     onChange={handleChange(\"Floor\")}\n//                     autoComplete=\"fname\"\n//                     name=\"Floor\"\n//                     variant=\"outlined\"\n//                     required\n//                     fullWidth\n//                     id=\"Floor\"\n//                     label=\"Floor\"\n//                     autoFocus\n//                   />\n//                 </Grid>\n//                 </Grid>\n//                 <Grid container spacing={2}>\n//                 <Grid item xs={12} >\n//                   <TextField\n//                     value={values.DeliveryInstructions}\n//                     onChange={handleChange(\"DeliveryInstructions\")}\n//                     autoComplete=\"fname\"\n//                     name=\"Delivery Instructions\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     id=\"DeliveryInstructions\"\n//                     label=\"Delivery Instructions:\"\n//                     autoFocus\n//                   />\n//                 </Grid>\n//                 </Grid>\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 color=\"primary\" \n//                 className={classes.submit}\n//               >\n//               Set location\n//               </Button>\n//               <Grid container justify=\"flex-end\">\n//                 <Grid item>\n//                 </Grid>\n//                 <Grid item>\n//                   <p id=\"accoutCreated\"></p>\n//                 </Grid>\n//               </Grid>\n//             </form>\n//           </div>\n//           <Box mt={5}>\n//             <Copyright />\n//           </Box>\n//         </Container>\n//   )\n// }\n// import React from 'react'\n// import axios from 'axios'\n// import { useHistory } from 'react-router-dom'\n// import Avatar from '@material-ui/core/Avatar'\n// import Button from '@material-ui/core/Button'\n// import Snackbar from '@material-ui/core/Snackbar';\n// import CssBaseline from '@material-ui/core/CssBaseline'\n// import TextField from '@material-ui/core/TextField'\n// import FormControlLabel from '@material-ui/core/FormControlLabel'\n// import FormControl from '@material-ui/core/FormControl'\n// import InputLabel from '@material-ui/core/InputLabel'\n// import Select from '@material-ui/core/Select'\n// import MenuItem from '@material-ui/core/MenuItem'\n// import Checkbox from '@material-ui/core/Checkbox'\n// import Link from '@material-ui/core/Link'\n// import Grid from '@material-ui/core/Grid'\n// import Box from '@material-ui/core/Box'\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n// import Typography from '@material-ui/core/Typography'\n// import { makeStyles } from '@material-ui/core/styles'\n// import Container from '@material-ui/core/Container'\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {'Copyright Â© '}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   )\n// }\n// const useStyles = makeStyles(theme => ({\n//   formControl: {\n//     minWidth: '100%',\n//   },\n//   paper: {\n//     marginTop: theme.spacing(8),\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//   },\n//   avatar: {\n//     margin: theme.spacing(1),\n//     background: 'rgba(0, 0, 0, 0.94)',\n//   },\n//   form: {\n//     width: '100%', // Fix IE 11 issue.\n//     marginTop: theme.spacing(3),\n//   },\n//   submit: {\n//     margin: theme.spacing(3, 0, 2),\n//     background: 'rgba(0, 0, 0, 0.79)',\n//     color: 'white',\n//   },\n// }))\n// export default function Wtem() {\n//   const classes = useStyles()\n//   const history = useHistory()\n//  // City:req.body.City,\n//  //      Area:req.body.Area,\n//  //      RoadName:req.body.RoadName,\n//  //      BuildingNumber:req.body.BuildingNumber,\n//  //      Floor:req.body.Floor,\n//  //      DeliveryInstructions:req.body.DeliveryInstructions\n//   const [values, setValues] = React.useState({\n//     City: '',\n//     Area: '',\n//     RoadName: '',\n//     BuildingNumber: '',\n//     Floor: '',\n//     DeliveryInstructions:'',\n//   })\n//   const [isOpen, setIsOpen ] = React.useState(false)\n//   const handleChange = prop => event => {\n//     setValues({ ...values, [prop]: event.target.value })\n//   }\n//   const onSubmit = async(e) => {\n//     e.preventDefault()\n//     try {\n//       const token = localStorage.getItem('loggedInToken')\n//       const { City, Area, RoadName, Building, Floor,DeliveryInstructions } = values\n//       const locations = {\n//         // category,\n//         // name,\n//         // price,\n//         // description,\n//         // image,\n//         City, Area, RoadName, Building, Floor,DeliveryInstructions\n//       }\n//       const config = {\n//         headers: { Authorization: `Bearer ${token}` },\n//       }\n//       const bodyParameters = {\n//         City,\n//       }\n//    const result = await axios\n//       .post('http://localhost:7000/api/location', locations,\n//       config)\n//       if (result.status === 201 ) {\n//         setIsOpen(true)\n//         setValues(() => ({\n//           City: '',\n//           Area: '',\n//           RoadName: '',\n//          BuildingNumber: '',\n//          Floor: '',\n//          DeliveryInstructions:'',\n//         }))\n//       }\n//     } catch(error){\n//         console.log(error)\n//       }\n//   }\n//   const isInvalid =\n//   values.City === \"\" ||\n//   values.Area  === \"\" ||\n//   values.RoadName === \"\" ||\n//   values.BuildingNumber === \"\" ||\n//   values.Floor === \"\"||\n//   values.DeliveryInstructions===\"\"\n//   React.useEffect(() => {\n//     // there is no token, redirect to login page\n//     if (localStorage.getItem('loggedInToken') === null) {\n//       history.push('/login')\n//     }\n//   }, [])\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <CssBaseline />\n//       <Snackbar\n//         anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//         open={isOpen}\n//         onClose={() => {\n//           setIsOpen(false)\n//         }}\n//         key={'top' + 'center'}\n//         autoHideDuration={6000}\n//       >\n//         {/* <Alert onClose={() => {\n//           setIsOpen(false)\n//         }} severity=\"success\">\n//           This is a success message!\n//         </Alert> */}\n//       </Snackbar>\n//       <div className={classes.paper}>\n//         <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\n//         <Typography component=\"h1\" variant=\"h5\">\n//           Add Item\n//         </Typography>\n//         <form className={classes.form} onSubmit={onSubmit} noValidate>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <FormControl variant=\"filled\" className={classes.formControl}>\n//                 <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\n//                 <Select\n//                   labelId=\"demo-simple-select-label\"\n//                   id=\"demo-simple-select\"\n//                   value={values.City}\n//                   onChange={handleChange('City')}\n//                 >\n//                   <MenuItem value=\"Irbid\">Irbid</MenuItem>\n//                   <MenuItem value=\"Amman\">Amman</MenuItem>\n//                   <MenuItem value=\"Karack\">Karack</MenuItem>\n//                 </Select>\n//               </FormControl>\n//             </Grid>\n//           </Grid>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 value={values.Area}\n//                 onChange={handleChange('Area')}\n//                 autoComplete=\"fname\"\n//                 name=\"Area\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"Area\"\n//                 label=\"Name\"\n//                 autoFocus\n//               />\n//             </Grid>\n//           </Grid>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 value={values.RoadName}\n//                 onChange={handleChange('RoadName')}\n//                 autoComplete=\"fname\"\n//                 name=\"RoadName\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"RoadName\"\n//                 label=\"RoadName\"\n//                 autoFocus\n//               />\n//             </Grid>\n//           </Grid>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 value={values.BuildingNumber}\n//                 onChange={handleChange('BuildingNumber')}\n//                 autoComplete=\"fname\"\n//                 name=\"BuildingNumber\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"BuildingNumber\"\n//                 label=\"BuildingNumber\"\n//                 autoFocus\n//                 //type=Number\n//               />\n//             </Grid>\n//           </Grid>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 value={values.Floor}\n//                 onChange={handleChange('Floor')}\n//                 autoComplete=\"fname\"\n//                 name=\"Floor\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"Floor\"\n//                 label=\"Floor\"\n//                 autoFocus\n//               />\n//             </Grid>\n//           </Grid>\n//           <Grid container spacing={2}>\n//             <Grid item xs={12}>\n//               <TextField\n//                 value={values.DeliveryInstructions}\n//                 onChange={handleChange('DeliveryInstructions')}\n//                 autoComplete=\"fname\"\n//                 name=\"DeliveryInstructions\"\n//                 variant=\"outlined\"\n//                 required\n//                 fullWidth\n//                 id=\"DeliveryInstructions\"\n//                 label=\"DeliveryInstructions\"\n//                 autoFocus\n//               />\n//             </Grid>\n//           </Grid>\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             color=\"primary\"\n//             className={classes.submit}\n//             disabled={isInvalid}\n//           >\n//             Set Location\n//           </Button>\n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               <Link href=\"delet item\" variant=\"body2\">\n//                 Did you need to delet item ?\n//               </Link>\n//             </Grid>\n//             <Grid item>\n//               <p id=\"accoutCreated\"></p>\n//             </Grid>\n//           </Grid>\n//         </form>\n//       </div>\n//       <Box mt={5}>\n//         <Copyright />\n//       </Box>\n//     </Container>\n//   )\n// }\nimport React from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 5\n    }\n  }, 'Copyright Â© ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 7\n    }\n  }, \"Your Website\"), ' ', new Date().getFullYear(), '.');\n}\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: '100%'\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    background: 'rgba(0, 0, 0, 0.94)'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'rgba(0, 0, 0, 0.79)',\n    color: 'white'\n  }\n}));\nexport default function Wtem() {\n  const classes = useStyles();\n  const history = useHistory(); // City:req.body.City,\n  //      Area:req.body.Area,\n  //      RoadName:req.body.RoadName,\n  //      BuildingNumber:req.body.BuildingNumber,\n  //      Floor:req.body.Floor,\n  //      DeliveryInstructions:req.body.DeliveryInstructions\n\n  const [values, setValues] = React.useState({\n    City: '',\n    Area: '',\n    RoadName: '',\n    BuildingNumber: 0,\n    Floor: '',\n    DeliveryInstructions: ''\n  });\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const token = localStorage.getItem('loggedInToken');\n      const {\n        City,\n        Area,\n        RoadName,\n        BuildingNumber,\n        Floor,\n        DeliveryInstructions\n      } = values;\n      const locations = {\n        // category,\n        // name,\n        // price,\n        // description,\n        // image,\n        City,\n        Area,\n        RoadName,\n        BuildingNumber,\n        Floor,\n        DeliveryInstructions\n      };\n      console.log(locations);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const bodyParameters = {\n        City\n      };\n      const result = await axios.post('http://localhost:7000/api/location', locations, config);\n\n      if (result.status === 201) {\n        setIsOpen(true);\n        setValues(() => ({\n          City: '',\n          Area: '',\n          RoadName: '',\n          BuildingNumber: 0,\n          Floor: '',\n          DeliveryInstructions: ''\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const isInvalid = values.City === \"\" || values.Area === \"\" || values.RoadName === \"\" || values.BuildingNumber === \"\" || values.Floor === \"\" || values.DeliveryInstructions === \"\";\n  React.useEffect(() => {\n    // there is no token, redirect to login page\n    if (localStorage.getItem('loggedInToken') === null) {\n      history.push('/login');\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: isOpen,\n    onClose: () => {\n      setIsOpen(false);\n    },\n    key: 'top' + 'center',\n    autoHideDuration: 6000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddLocationIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 9\n    }\n  }, \"Add your location\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: onSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"filled\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: values.City,\n    onChange: handleChange('City'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Amman\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 18\n    }\n  }, \"Amman\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Zarqa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 19\n    }\n  }, \"Zarqa\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Salt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 19\n    }\n  }, \"Salt\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: values.Area,\n    onChange: handleChange('Area'),\n    autoComplete: \"fname\",\n    name: \"Area\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"Area\",\n    label: \"Name\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: values.RoadName,\n    onChange: handleChange('RoadName'),\n    autoComplete: \"fname\",\n    name: \"RoadName\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"RoadName\",\n    label: \"RoadName\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: values.BuildingNumber,\n    onChange: handleChange('BuildingNumber'),\n    autoComplete: \"fname\",\n    name: \"BuildingNumber\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"BuildingNumber\",\n    label: \"BuildingNumber\",\n    autoFocus: true,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: values.Floor,\n    onChange: handleChange('Floor'),\n    autoComplete: \"fname\",\n    name: \"Floor\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"Floor\",\n    label: \"Floor\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1120,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: values.DeliveryInstructions,\n    onChange: handleChange('DeliveryInstructions'),\n    autoComplete: \"fname\",\n    name: \"DeliveryInstructions\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"DeliveryInstructions\",\n    label: \"Phone \",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    disabled: isInvalid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 11\n    }\n  }, \"Set Location\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"accoutCreated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/baker/Desktop/BakeryShop4/client/src/component/location.js"],"names":["React","axios","useHistory","Avatar","Button","Snackbar","CssBaseline","TextField","FormControlLabel","FormControl","InputLabel","Select","MenuItem","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","AddLocationIcon","Copyright","Date","getFullYear","useStyles","theme","formControl","minWidth","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","background","form","width","submit","color","Wtem","classes","history","values","setValues","useState","City","Area","RoadName","BuildingNumber","Floor","DeliveryInstructions","isOpen","setIsOpen","handleChange","prop","event","target","value","onSubmit","e","preventDefault","token","localStorage","getItem","locations","console","log","config","headers","Authorization","bodyParameters","result","post","status","error","isInvalid","useEffect","push","vertical","horizontal"],"mappingskB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACC,OAAOC,eAAP,MAA4B,gCAA5B;;AAED,SAASC,SAAT,GAAqB;AACnB,sBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,cADH,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAIU,GAJV,EAKG,IAAIC,IAAJ,GAAWC,WAAX,EALH,EAMG,GANH,CADF;AAUD;;AACD,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE;AADC,GADwB;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAJ8B;AAUrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,UAAU,EAAE;AAFN,GAV6B;AAcrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfT,IAAAA,SAAS,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AAFP,GAd+B;AAkBrCS,EAAAA,MAAM,EAAE;AACNJ,IAAAA,MAAM,EAAEV,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CADF;AAENM,IAAAA,UAAU,EAAE,qBAFN;AAGNI,IAAAA,KAAK,EAAE;AAHD;AAlB6B,CAAL,CAAN,CAA5B;AAwBA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAMmB,OAAO,GAAG1C,UAAU,EAA1B,CAF6B,CAG9B;AACA;AACA;AACA;AACA;AACA;;AACC,QAAM,CAAC2C,MAAD,EAASC,SAAT,IAAsB9C,KAAK,CAAC+C,QAAN,CAAe;AACzCC,IAAAA,IAAI,EAAE,EADmC;AAEzCC,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,QAAQ,EAAE,EAH+B;AAIzCC,IAAAA,cAAc,EAAC,CAJ0B;AAKzCC,IAAAA,KAAK,EAAE,EALkC;AAMzCC,IAAAA,oBAAoB,EAAC;AANoB,GAAf,CAA5B;AAQA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAuBvD,KAAK,CAAC+C,QAAN,CAAe,KAAf,CAA7B;;AACA,QAAMS,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACpCZ,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACY,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAAlC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG,MAAMC,CAAN,IAAY;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;AACA,YAAM;AAAElB,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcC,QAAAA,QAAd;AAAwBC,QAAAA,cAAxB;AAAwCC,QAAAA,KAAxC;AAA8CC,QAAAA;AAA9C,UAAuER,MAA7E;AACA,YAAMsB,SAAS,GAAG;AAChB;AACA;AACA;AACA;AACA;AACAnB,QAAAA,IANgB;AAMVC,QAAAA,IANU;AAMJC,QAAAA,QANI;AAMMC,QAAAA,cANN;AAMsBC,QAAAA,KANtB;AAM4BC,QAAAA;AAN5B,OAAlB;AAQNe,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACM,YAAMG,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASR,KAAM;AAAjC;AADI,OAAf;AAGA,YAAMS,cAAc,GAAG;AACrBzB,QAAAA;AADqB,OAAvB;AAGH,YAAM0B,MAAM,GAAG,MAAMzE,KAAK,CACtB0E,IADiB,CACZ,oCADY,EAC0BR,SAD1B,EAElBG,MAFkB,CAArB;;AAGG,UAAII,MAAM,CAACE,MAAP,KAAkB,GAAtB,EAA4B;AAC1BrB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAT,QAAAA,SAAS,CAAC,OAAO;AACfE,UAAAA,IAAI,EAAE,EADS;AAEfC,UAAAA,IAAI,EAAE,EAFS;AAGfC,UAAAA,QAAQ,EAAE,EAHK;AAIhBC,UAAAA,cAAc,EAAC,CAJC;AAKhBC,UAAAA,KAAK,EAAE,EALS;AAMhBC,UAAAA,oBAAoB,EAAC;AANL,SAAP,CAAD,CAAT;AAQD;AACF,KAhCD,CAgCE,OAAMwB,KAAN,EAAY;AACVT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACJ,GArCD;;AAsCA,QAAMC,SAAS,GACfjC,MAAM,CAACG,IAAP,KAAgB,EAAhB,IACAH,MAAM,CAACI,IAAP,KAAiB,EADjB,IAEAJ,MAAM,CAACK,QAAP,KAAoB,EAFpB,IAGAL,MAAM,CAACM,cAAP,KAA0B,EAH1B,IAIAN,MAAM,CAACO,KAAP,KAAiB,EAJjB,IAKAP,MAAM,CAACQ,oBAAP,KAA8B,EAN9B;AAOArD,EAAAA,KAAK,CAAC+E,SAAN,CAAgB,MAAM;AACpB;AACA,QAAId,YAAY,CAACC,OAAb,CAAqB,eAArB,MAA0C,IAA9C,EAAoD;AAClDtB,MAAAA,OAAO,CAACoC,IAAR,CAAa,QAAb;AACD;AACF,GALD,EAKG,EALH;AAMA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KADhB;AAEE,IAAA,IAAI,EAAE5B,MAFR;AAGE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KALH;AAME,IAAA,GAAG,EAAE,QAAQ,QANf;AAOE,IAAA,gBAAgB,EAAE,IAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAaE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACd,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEc,OAAO,CAACR,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,CADF,eAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAKE;AAAM,IAAA,SAAS,EAAEQ,OAAO,CAACL,IAAzB;AAA+B,IAAA,QAAQ,EAAEuB,QAAzC;AAAmD,IAAA,UAAU,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,QAArB;AAA8B,IAAA,SAAS,EAAElB,OAAO,CAAChB,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,0BADV;AAEE,IAAA,EAAE,EAAC,oBAFL;AAGE,IAAA,KAAK,EAAEkB,MAAM,CAACG,IAHhB;AAIE,IAAA,QAAQ,EAAEQ,YAAY,CAAC,MAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAND,eAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CAFF,CADF,CADF,CADF,eAkBE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACI,IADhB;AAEE,IAAA,QAAQ,EAAEO,YAAY,CAAC,MAAD,CAFxB;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,EAAE,EAAC,MARL;AASE,IAAA,KAAK,EAAC,MATR;AAUE,IAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlBF,eAkCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACK,QADhB;AAEE,IAAA,QAAQ,EAAEM,YAAY,CAAC,UAAD,CAFxB;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,EAAE,EAAC,UARL;AASE,IAAA,KAAK,EAAC,UATR;AAUE,IAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlCF,eAkDC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACM,cADhB;AAEE,IAAA,QAAQ,EAAEK,YAAY,CAAC,gBAAD,CAFxB;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,IAAI,EAAC,gBAJP;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,EAAE,EAAC,gBARL;AASE,IAAA,KAAK,EAAC,gBATR;AAUE,IAAA,SAAS,MAVX;AAWE,IAAA,IAAI,EAAC,QAXP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,CAlDD,eAmEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACO,KADhB;AAEE,IAAA,QAAQ,EAAEI,YAAY,CAAC,OAAD,CAFxB;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,EAAE,EAAC,OARL;AASE,IAAA,KAAK,EAAC,OATR;AAUE,IAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAnEF,eAmFE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACQ,oBADhB;AAEE,IAAA,QAAQ,EAAEG,YAAY,CAAC,sBAAD,CAFxB;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,IAAI,EAAC,sBAJP;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,EAAE,EAAC,sBARL;AASE,IAAA,KAAK,EAAC,QATR;AAUE,IAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAnFF,eAmGE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEb,OAAO,CAACH,MALrB;AAME,IAAA,QAAQ,EAAEsC,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnGF,eA6GE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,EAAE,EAAC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CA7GF,CALF,CAbF,eAyIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzIF,CADF;AA+ID","sourcesContent":["// // import React from \"react\";\r\n// // import axios from \"axios\";\r\n// // import Avatar from \"@material-ui/core/Avatar\";\r\n// // import Button from \"@material-ui/core/Button\";\r\n// // import CssBaseline from \"@material-ui/core/CssBaseline\";\r\n// // import TextField from \"@material-ui/core/TextField\";\r\n// // import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// // import Checkbox from \"@material-ui/core/Checkbox\";\r\n// // import Link from \"@material-ui/core/Link\";\r\n// // import Grid from \"@material-ui/core/Grid\";\r\n// // import Box from \"@material-ui/core/Box\";\r\n// // import LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n// // import Typography from \"@material-ui/core/Typography\";\r\n// // import { makeStyles } from \"@material-ui/core/styles\";\r\n// // import Container from \"@material-ui/core/Container\";\r\n// // import AddLocationIcon from '@material-ui/icons/AddLocation';\r\n// // import MenuItem from '@material-ui/core/MenuItem'\r\n\r\n// // import {\r\n// //     fade,\r\n// //     ThemeProvider,\r\n// //     withStyles,\r\n// //     createMuiTheme,\r\n// //   } from '@material-ui/core/styles';\r\n// //   import InputBase from '@material-ui/core/InputBase';\r\n// //   import InputLabel from '@material-ui/core/InputLabel';\r\n// //   import FormControl from '@material-ui/core/FormControl';\r\n// //   import { green } from '@material-ui/core/colors';\r\n// //   import FormHelperText from '@material-ui/core/FormHelperText';\r\n// //   import Select from '@material-ui/core/Select';\r\n// //   import NativeSelect from '@material-ui/core/NativeSelect';\r\n// // function Copyright() {\r\n// //   return (\r\n// //     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n// //       {\"Copyright Â© \"}\r\n// //       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n// //         Your Website\r\n// //       </Link>{\" \"}\r\n// //       {new Date().getFullYear()}\r\n// //       {\".\"}\r\n// //     </Typography>\r\n// //   );\r\n// // }\r\n// // const useStyles = makeStyles((theme) => ({\r\n// //   paper: {\r\n// //     marginTop: theme.spacing(8),\r\n// //     display: \"flex\",\r\n// //     flexDirection: \"column\",\r\n// //     alignItems: \"center\",\r\n// //   },\r\n// //   avatar: {\r\n// //     margin: theme.spacing(1),\r\n// //     background:\"rgba(0, 0, 0, 0.94)\",\r\n// //   },\r\n// //   form: {\r\n// //     width: \"100%\", // Fix IE 11 issue.\r\n// //     marginTop: theme.spacing(3),\r\n// //   },\r\n// //   submit: {\r\n// //     margin: theme.spacing(3, 0, 2),\r\n// //     background:\"rgba(0, 0, 0, 0.79)\",\r\n// //     color:\"white\"\r\n// //   },\r\n// //   city:{\r\n// //       width:\"395px\",\r\n    \r\n// //   }\r\n// // }));\r\n// // export default function Wtem() {\r\n// //   const classes = useStyles();\r\n// //   const [values, setValues] = React.useState({\r\n// //   City: \" \",\r\n// //    Area:\" \" ,\r\n// //    RoadName: \" \",\r\n// //    BuildingNumber:\" \",\r\n// //    Floor:\" \",\r\n// //    DeliveryInstructions:\" \",\r\n// //   });\r\n// //   const ValidationTextField = withStyles({\r\n// //     root: {\r\n// //       '& input:valid + fieldset': {\r\n// //         borderColor: 'green',\r\n// //         borderWidth: 2,\r\n// //       },\r\n// //       '& input:invalid + fieldset': {\r\n// //         borderColor: 'red',\r\n// //         borderWidth: 2,\r\n// //       },\r\n// //       '& input:valid:focus + fieldset': {\r\n// //         borderLeftWidth: 6,\r\n// //         padding: '4px !important', // override inline-style\r\n// //       },\r\n// //     },\r\n// //   })(TextField);\r\n// //   const handleChange = (prop) => (event) => {\r\n// //     setValues({ ...values, [prop]: event.target.value });\r\n// //   };\r\n  \r\n// //   const onSubmit = (e) => {\r\n// //     e.preventDefault();\r\n// //    var City = document.getElementById(\"City\").value;\r\n// //     var Area = document.getElementById(\"Area\").value;\r\n// //     var RoadName = document.getElementById(\"RoadName\").value;\r\n// //     var BuildingNumber = document.getElementById(\"BuildingNumber\").value;\r\n// //      var Floor = document.getElementById(\"Floor\").value;\r\n// //      var DeliveryInstructions=document.getElementById(\"DeliveryInstructions\").value;\r\n     \r\n  \r\n// //     const locations = {\r\n// //      City:City,\r\n// //       Area:Area,\r\n// //       RoadName:RoadName,\r\n// //       BuildingNumber:BuildingNumber,\r\n// //       Floor:Floor,\r\n// //       DeliveryInstructions:DeliveryInstructions\r\n// //       // email: email,\r\n// //       // password: password,\r\n// //     };\r\n// //     console.log(locations)\r\n// //     //console.log(user)\r\n// //     axios\r\n// //        .post(\"http://localhost:7000/api/location\", locations)\r\n// //  .then((res) => {\r\n// //     console.log(res.data);\r\n// //     if(res.date === \"done\"){\r\n// //         alert('ok')\r\n// //       }\r\n// //   }).catch((error) => {\r\n// //        alert(\"try again \")\r\n// //       console.log(error)\r\n// //   });\r\n// //   };\r\n// //   return (\r\n// //     <Container component=\"main\" maxWidth=\"xs\">\r\n// //       <CssBaseline />\r\n// //       <div className={classes.paper}>\r\n// //         <Avatar className={classes.avatar}>\r\n// //             <AddLocationIcon/>\r\n\r\n// //         </Avatar>\r\n// //         <Typography component=\"h1\" variant=\"h5\">\r\n// //          Add location\r\n// //          </Typography>\r\n// //         {/* <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n// //         <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //               <TextField\r\n// //                 value={values.City}\r\n// //                 onChange={handleChange(\"City\")}\r\n// //                 autoComplete=\"fname\"\r\n// //                 name=\"City\"\r\n// //                 variant=\"outlined\"\r\n// //                 required\r\n// //                 fullWidth\r\n// //                 id=\"City\"\r\n// //                 label=\"City\"\r\n// //                 autoFocus\r\n// //               />\r\n// //             </Grid>\r\n// //   </Grid> */ }\r\n// //               <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n// //           <Grid container spacing={2}>\r\n// //             <Grid item xs={12}>\r\n// //               <FormControl variant=\"filled\" className={classes.formControl}>\r\n// //                 <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n// //                 <Select\r\n// //                   labelId=\"demo-simple-select-label\"\r\n// //                   id=\"demo-simple-select\"\r\n// //                   value={values.city}\r\n// //                   onChange={handleChange('city')}\r\n// //                 >\r\n// //                   <MenuItem value=\"Amman\">Amman</MenuItem>\r\n// //                   <MenuItem value=\"Zarqa\">Zarqa</MenuItem>\r\n// //                   <MenuItem value=\"Salt\">Salt</MenuItem>\r\n// //                 </Select>\r\n// //               </FormControl>\r\n// //             </Grid>\r\n// //           </Grid>\r\n// //           {/* <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //             <FormControl className={classes.city}>\r\n// //          <InputLabel  value= {values.City}>City</InputLabel>\r\n// //         <NativeSelect\r\n// //         required >\r\n// //           <option aria-label=\"None\" value=\"\" />\r\n// //           <option value={\"Amman\"}>Amman</option>\r\n// //           <option value={\"Zarqa\"}>Zarqa</option>\r\n// //           <option value={\"Salt\"}>Salt</option>\r\n// //         </NativeSelect> \r\n// //         <FormHelperText>Choose your city</FormHelperText>\r\n// //       </FormControl>\r\n// //             </Grid>\r\n// //             </Grid> */}\r\n// //             <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //               <TextField\r\n// //                 value={values.Area}\r\n// //                 onChange={handleChange(\"Area\")}\r\n// //                 autoComplete=\"fname\"\r\n// //                 name=\"Area\"\r\n// //                 variant=\"outlined\"\r\n// //                 required\r\n// //                 fullWidth\r\n// //                 id=\"Area\"\r\n// //                 label=\"Area\"\r\n// //                 autoFocus\r\n// //               />\r\n            \r\n// //             </Grid>\r\n// //             </Grid>\r\n// //             <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //               <TextField \r\n// //                 value={values.RoadName}\r\n// //                 onChange={handleChange(\"RoadName\")}\r\n// //                 name=\"Road Name\"\r\n// //                 variant=\"outlined\"\r\n// //                 autoComplete=\"fname\"\r\n\r\n// //                 required\r\n// //                 fullWidth\r\n// //                 id=\"RoadName\"\r\n// //                 label=\"Road Name\"\r\n// //                 autoFocus\r\n                \r\n// //               />\r\n// //             </Grid>\r\n// //             </Grid>\r\n// //             <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //               <TextField\r\n// //                 value={values.BuildingNumber}\r\n// //                 onChange={handleChange(\"BuildingNumber\")}\r\n// //                 autoComplete=\"fname\"\r\n// //                 name=\"Building Number\"\r\n// //                 variant=\"outlined\"\r\n// //                 required\r\n// //                 fullWidth\r\n// //                 id=\"BuildingNumber\"\r\n// //                 label=\"Building Number\"\r\n// //                 autoFocus\r\n// //               />\r\n// //             </Grid>\r\n// //             </Grid>\r\n// //              <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //               <TextField\r\n// //                 value={values.floor}\r\n// //                 onChange={handleChange(\"Floor\")}\r\n// //                 autoComplete=\"fname\"\r\n// //                 name=\"Floor\"\r\n// //                 variant=\"outlined\"\r\n// //                 required\r\n// //                 fullWidth\r\n// //                 id=\"Floor\"\r\n// //                 label=\"Floor\"\r\n// //                 autoFocus\r\n// //               />\r\n// //             </Grid>\r\n// //             </Grid>\r\n\r\n\r\n\r\n// //             <Grid container spacing={2}>\r\n// //             <Grid item xs={12} >\r\n// //               <TextField\r\n// //                 value={values.DeliveryInstructions}\r\n// //                 onChange={handleChange(\"DeliveryInstructions\")}\r\n// //                 autoComplete=\"fname\"\r\n// //                 name=\"Delivery Instructions\"\r\n// //                 variant=\"outlined\"\r\n// //                 fullWidth\r\n// //                 id=\"DeliveryInstructions\"\r\n// //                 label=\"Delivery Instructions:\"\r\n// //                 autoFocus\r\n// //               />\r\n// //             </Grid>\r\n// //             </Grid>\r\n\r\n\r\n            \r\n// //           <Button\r\n// //             type=\"submit\"\r\n// //             fullWidth\r\n// //             variant=\"contained\"\r\n// //             color=\"primary\" \r\n// //             className={classes.submit}\r\n// //           >\r\n// //           Set location\r\n// //           </Button>\r\n// //           <Grid container justify=\"flex-end\">\r\n// //             <Grid item>\r\n// //             </Grid>\r\n// //             <Grid item>\r\n// //               <p id=\"accoutCreated\"></p>\r\n// //             </Grid>\r\n// //           </Grid>\r\n// //         </form>\r\n// //       </div>\r\n// //       <Box mt={5}>\r\n// //         <Copyright />\r\n// //       </Box>\r\n// //     </Container>\r\n// //   );\r\n// // }\r\n\r\n// import React from 'react'\r\n// import axios from 'axios'\r\n// import { useHistory } from 'react-router-dom'\r\n// import Avatar from '@material-ui/core/Avatar'\r\n// import Button from '@material-ui/core/Button'\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n\r\n// import CssBaseline from '@material-ui/core/CssBaseline'\r\n// import TextField from '@material-ui/core/TextField'\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel'\r\n// import FormControl from '@material-ui/core/FormControl'\r\n// import InputLabel from '@material-ui/core/InputLabel'\r\n// import Select from '@material-ui/core/Select'\r\n// import MenuItem from '@material-ui/core/MenuItem'\r\n// import Checkbox from '@material-ui/core/Checkbox'\r\n// import Link from '@material-ui/core/Link'\r\n// import Grid from '@material-ui/core/Grid'\r\n// import Box from '@material-ui/core/Box'\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\n// import Typography from '@material-ui/core/Typography'\r\n// import { makeStyles } from '@material-ui/core/styles'\r\n// import Container from '@material-ui/core/Container'\r\n//  import AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\n\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright Â© '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   )\r\n// }\r\n// const useStyles = makeStyles(theme => ({\r\n//   formControl: {\r\n//     minWidth: '100%',\r\n//   },\r\n//   paper: {\r\n//     marginTop: theme.spacing(8),\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   },\r\n//   avatar: {\r\n//     margin: theme.spacing(1),\r\n//     background: 'rgba(0, 0, 0, 0.94)',\r\n//   },\r\n//   form: {\r\n//     width: '100%', // Fix IE 11 issue.\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 0, 2),\r\n//     background: 'rgba(0, 0, 0, 0.79)',\r\n//     color: 'white',\r\n//   },\r\n// }))\r\n\r\n// export default function Item() {\r\n//   const classes = useStyles()\r\n//   const history = useHistory()\r\n\r\n//   const [values, setValues] = React.useState({\r\n//     City: \" \",\r\n//        Area:\" \" ,\r\n//        RoadName: \" \",\r\n//        BuildingNumber:\" \",\r\n//        Floor:\" \",\r\n//        DeliveryInstructions:\" \",\r\n//   })\r\n\r\n\r\n//   const [isOpen, setIsOpen ] = React.useState(false)\r\n\r\n//   const handleChange = prop => event => {\r\n//     setValues({ ...values, [prop]: event.target.value })\r\n//   }\r\n\r\n//   const onSubmit = async(e) => {\r\n//     e.preventDefault()\r\n\r\n//     try {\r\n//       const token = localStorage.getItem('loggedInToken')\r\n//       const { City, Area, RoadName, BuildingNumber, Floor,DeliveryInstructions } = values\r\n\r\n//       const locations = {\r\n//         City,\r\n//            Area ,\r\n//            RoadName,\r\n//            BuildingNumber,\r\n//            Floor,\r\n//            DeliveryInstructions,\r\n//       }\r\n\r\n//       const config = {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       }\r\n\r\n//       // const bodyParameters = {\r\n//       //   category,\r\n//       // }\r\n// //console.log (config)\r\n//    const result = await axios\r\n//       .post('http://localhost:7000/api/location/', locations,\r\n//       config)\r\n\r\n//       if (result.status === 201 ) {\r\n//         setIsOpen(true)\r\n//         setValues(() => ({\r\n//           City: \" \",\r\n//        Area:\" \" ,\r\n//        RoadName: \" \",\r\n//        BuildingNumber:\" \",\r\n//        Floor:\" \",\r\n//        DeliveryInstructions:\" \",\r\n//         }))\r\n//       }\r\n//     } catch(error){\r\n//         console.log(error)\r\n//       }\r\n//   }\r\n\r\n//   // const isInvalid =\r\n//   // values.name === \"\" ||\r\n//   // values.category  === \"\" ||\r\n//   // values.price === \"\" ||\r\n//   // values.description === \"\" ||\r\n//   // values.image === \"\"\r\n\r\n//   React.useEffect(() => {\r\n//     // there is no token, redirect to login page\r\n//     if (localStorage.getItem('loggedInToken') === null) {\r\n//       history.push('/login')\r\n//     }\r\n//   }, [])\r\n\r\n//   return (\r\n//     <Container component=\"main\" maxWidth=\"xs\">\r\n//            <CssBaseline />\r\n//            <div className={classes.paper}>\r\n//             <Avatar className={classes.avatar}>\r\n//                 <AddLocationIcon/>\r\n    \r\n//           </Avatar>\r\n//          <Typography component=\"h1\" variant=\"h5\">\r\n//               Add location\r\n//     </Typography>\r\n//             {/* <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n//              <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                   <TextField\r\n//                     value={values.City}\r\n//                     onChange={handleChange(\"City\")}\r\n//                     autoComplete=\"fname\"\r\n//                     name=\"City\"\r\n//                     variant=\"outlined\"\r\n//                     required\r\n//                     fullWidth\r\n//                     id=\"City\"\r\n//                     label=\"City\"\r\n//                     autoFocus\r\n//                   />\r\n//                 </Grid>\r\n//       </Grid> */ }\r\n//                   <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n//               {/* <Grid container spacing={2}>\r\n//                 <Grid item xs={12}>\r\n//                   <FormControl variant=\"filled\" className={classes.formControl}>\r\n//                     <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n//                     <Select\r\n//                       labelId=\"demo-simple-select-label\"\r\n//                       id=\"demo-simple-select\"\r\n//                       value={values.city}\r\n//                       onChange={handleChange('city')}\r\n//                     >\r\n//                       <MenuItem value=\"Amman\">Amman</MenuItem>\r\n//                       <MenuItem value=\"Zarqa\">Zarqa</MenuItem>\r\n//                       <MenuItem value=\"Salt\">Salt</MenuItem>\r\n//                     </Select>\r\n//                   </FormControl>\r\n//                 </Grid>\r\n//               </Grid> */}\r\n//               {/* <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                 <FormControl className={classes.city}>\r\n//              <InputLabel  value= {values.City}>City</InputLabel>\r\n//             <NativeSelect\r\n//             required >\r\n//               <option aria-label=\"None\" value=\"\" />\r\n//               <option value={\"Amman\"}>Amman</option>\r\n//               <option value={\"Zarqa\"}>Zarqa</option>\r\n//               <option value={\"Salt\"}>Salt</option>\r\n//             </NativeSelect> \r\n//             <FormHelperText>Choose your city</FormHelperText>\r\n//           </FormControl>\r\n//                 </Grid>\r\n//                 </Grid> */}\r\n//                 <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                   <TextField\r\n//                     value={values.Area}\r\n//                     onChange={handleChange(\"Area\")}\r\n//                     autoComplete=\"fname\"\r\n//                     name=\"Area\"\r\n//                     variant=\"outlined\"\r\n//                     required\r\n//                     fullWidth\r\n//                     id=\"Area\"\r\n//                     label=\"Area\"\r\n//                     autoFocus\r\n//                   />\r\n                \r\n//                 </Grid>\r\n//                 </Grid>\r\n//                 <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                   <TextField \r\n//                     value={values.RoadName}\r\n//                     onChange={handleChange(\"RoadName\")}\r\n//                     name=\"Road Name\"\r\n//                     variant=\"outlined\"\r\n//                     autoComplete=\"fname\"\r\n    \r\n//                     required\r\n//                     fullWidth\r\n//                     id=\"RoadName\"\r\n//                     label=\"Road Name\"\r\n//                     autoFocus\r\n                    \r\n//                   />\r\n//                 </Grid>\r\n//                 </Grid>\r\n//                 <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                   <TextField\r\n//                     value={values.BuildingNumber}\r\n//                     onChange={handleChange(\"BuildingNumber\")}\r\n//                     autoComplete=\"fname\"\r\n//                     name=\"Building Number\"\r\n//                     variant=\"outlined\"\r\n//                     required\r\n//                     fullWidth\r\n//                     id=\"BuildingNumber\"\r\n//                     label=\"Building Number\"\r\n//                     autoFocus\r\n//                   />\r\n//                 </Grid>\r\n//                 </Grid>\r\n//                  <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                   <TextField\r\n//                     value={values.floor}\r\n//                     onChange={handleChange(\"Floor\")}\r\n//                     autoComplete=\"fname\"\r\n//                     name=\"Floor\"\r\n//                     variant=\"outlined\"\r\n//                     required\r\n//                     fullWidth\r\n//                     id=\"Floor\"\r\n//                     label=\"Floor\"\r\n//                     autoFocus\r\n//                   />\r\n//                 </Grid>\r\n//                 </Grid>\r\n    \r\n    \r\n    \r\n//                 <Grid container spacing={2}>\r\n//                 <Grid item xs={12} >\r\n//                   <TextField\r\n//                     value={values.DeliveryInstructions}\r\n//                     onChange={handleChange(\"DeliveryInstructions\")}\r\n//                     autoComplete=\"fname\"\r\n//                     name=\"Delivery Instructions\"\r\n//                     variant=\"outlined\"\r\n//                     fullWidth\r\n//                     id=\"DeliveryInstructions\"\r\n//                     label=\"Delivery Instructions:\"\r\n//                     autoFocus\r\n//                   />\r\n//                 </Grid>\r\n//                 </Grid>\r\n    \r\n    \r\n                \r\n//               <Button\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\"\r\n//                 color=\"primary\" \r\n//                 className={classes.submit}\r\n//               >\r\n//               Set location\r\n//               </Button>\r\n//               <Grid container justify=\"flex-end\">\r\n//                 <Grid item>\r\n//                 </Grid>\r\n//                 <Grid item>\r\n//                   <p id=\"accoutCreated\"></p>\r\n//                 </Grid>\r\n//               </Grid>\r\n//             </form>\r\n//           </div>\r\n//           <Box mt={5}>\r\n//             <Copyright />\r\n//           </Box>\r\n//         </Container>\r\n//   )\r\n// }\r\n\r\n// import React from 'react'\r\n// import axios from 'axios'\r\n// import { useHistory } from 'react-router-dom'\r\n// import Avatar from '@material-ui/core/Avatar'\r\n// import Button from '@material-ui/core/Button'\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import CssBaseline from '@material-ui/core/CssBaseline'\r\n// import TextField from '@material-ui/core/TextField'\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel'\r\n// import FormControl from '@material-ui/core/FormControl'\r\n// import InputLabel from '@material-ui/core/InputLabel'\r\n// import Select from '@material-ui/core/Select'\r\n// import MenuItem from '@material-ui/core/MenuItem'\r\n// import Checkbox from '@material-ui/core/Checkbox'\r\n// import Link from '@material-ui/core/Link'\r\n// import Grid from '@material-ui/core/Grid'\r\n// import Box from '@material-ui/core/Box'\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\n// import Typography from '@material-ui/core/Typography'\r\n// import { makeStyles } from '@material-ui/core/styles'\r\n// import Container from '@material-ui/core/Container'\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright Â© '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   )\r\n// }\r\n// const useStyles = makeStyles(theme => ({\r\n//   formControl: {\r\n//     minWidth: '100%',\r\n//   },\r\n//   paper: {\r\n//     marginTop: theme.spacing(8),\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//   },\r\n//   avatar: {\r\n//     margin: theme.spacing(1),\r\n//     background: 'rgba(0, 0, 0, 0.94)',\r\n//   },\r\n//   form: {\r\n//     width: '100%', // Fix IE 11 issue.\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 0, 2),\r\n//     background: 'rgba(0, 0, 0, 0.79)',\r\n//     color: 'white',\r\n//   },\r\n// }))\r\n// export default function Wtem() {\r\n//   const classes = useStyles()\r\n//   const history = useHistory()\r\n//  // City:req.body.City,\r\n//  //      Area:req.body.Area,\r\n//  //      RoadName:req.body.RoadName,\r\n//  //      BuildingNumber:req.body.BuildingNumber,\r\n//  //      Floor:req.body.Floor,\r\n//  //      DeliveryInstructions:req.body.DeliveryInstructions\r\n//   const [values, setValues] = React.useState({\r\n//     City: '',\r\n//     Area: '',\r\n//     RoadName: '',\r\n//     BuildingNumber: '',\r\n//     Floor: '',\r\n//     DeliveryInstructions:'',\r\n//   })\r\n//   const [isOpen, setIsOpen ] = React.useState(false)\r\n//   const handleChange = prop => event => {\r\n//     setValues({ ...values, [prop]: event.target.value })\r\n//   }\r\n//   const onSubmit = async(e) => {\r\n//     e.preventDefault()\r\n//     try {\r\n//       const token = localStorage.getItem('loggedInToken')\r\n//       const { City, Area, RoadName, Building, Floor,DeliveryInstructions } = values\r\n//       const locations = {\r\n//         // category,\r\n//         // name,\r\n//         // price,\r\n//         // description,\r\n//         // image,\r\n//         City, Area, RoadName, Building, Floor,DeliveryInstructions\r\n//       }\r\n//       const config = {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       }\r\n//       const bodyParameters = {\r\n//         City,\r\n//       }\r\n//    const result = await axios\r\n//       .post('http://localhost:7000/api/location', locations,\r\n//       config)\r\n//       if (result.status === 201 ) {\r\n//         setIsOpen(true)\r\n//         setValues(() => ({\r\n//           City: '',\r\n//           Area: '',\r\n//           RoadName: '',\r\n//          BuildingNumber: '',\r\n//          Floor: '',\r\n//          DeliveryInstructions:'',\r\n//         }))\r\n//       }\r\n//     } catch(error){\r\n//         console.log(error)\r\n//       }\r\n//   }\r\n//   const isInvalid =\r\n//   values.City === \"\" ||\r\n//   values.Area  === \"\" ||\r\n//   values.RoadName === \"\" ||\r\n//   values.BuildingNumber === \"\" ||\r\n//   values.Floor === \"\"||\r\n//   values.DeliveryInstructions===\"\"\r\n//   React.useEffect(() => {\r\n//     // there is no token, redirect to login page\r\n//     if (localStorage.getItem('loggedInToken') === null) {\r\n//       history.push('/login')\r\n//     }\r\n//   }, [])\r\n//   return (\r\n//     <Container component=\"main\" maxWidth=\"xs\">\r\n//       <CssBaseline />\r\n//       <Snackbar\r\n//         anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n//         open={isOpen}\r\n//         onClose={() => {\r\n//           setIsOpen(false)\r\n//         }}\r\n//         key={'top' + 'center'}\r\n//         autoHideDuration={6000}\r\n//       >\r\n//         {/* <Alert onClose={() => {\r\n//           setIsOpen(false)\r\n//         }} severity=\"success\">\r\n//           This is a success message!\r\n//         </Alert> */}\r\n//       </Snackbar>\r\n//       <div className={classes.paper}>\r\n//         <Avatar className={classes.avatar}>{/* <LockOutlinedIcon /> */}</Avatar>\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//           Add Item\r\n//         </Typography>\r\n//         <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <FormControl variant=\"filled\" className={classes.formControl}>\r\n//                 <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n//                 <Select\r\n//                   labelId=\"demo-simple-select-label\"\r\n//                   id=\"demo-simple-select\"\r\n//                   value={values.City}\r\n//                   onChange={handleChange('City')}\r\n//                 >\r\n//                   <MenuItem value=\"Irbid\">Irbid</MenuItem>\r\n//                   <MenuItem value=\"Amman\">Amman</MenuItem>\r\n//                   <MenuItem value=\"Karack\">Karack</MenuItem>\r\n//                 </Select>\r\n//               </FormControl>\r\n//             </Grid>\r\n//           </Grid>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 value={values.Area}\r\n//                 onChange={handleChange('Area')}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"Area\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"Area\"\r\n//                 label=\"Name\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//           </Grid>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 value={values.RoadName}\r\n//                 onChange={handleChange('RoadName')}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"RoadName\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"RoadName\"\r\n//                 label=\"RoadName\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//           </Grid>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 value={values.BuildingNumber}\r\n//                 onChange={handleChange('BuildingNumber')}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"BuildingNumber\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"BuildingNumber\"\r\n//                 label=\"BuildingNumber\"\r\n//                 autoFocus\r\n//                 //type=Number\r\n//               />\r\n//             </Grid>\r\n//           </Grid>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 value={values.Floor}\r\n//                 onChange={handleChange('Floor')}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"Floor\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"Floor\"\r\n//                 label=\"Floor\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//           </Grid>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={12}>\r\n//               <TextField\r\n//                 value={values.DeliveryInstructions}\r\n//                 onChange={handleChange('DeliveryInstructions')}\r\n//                 autoComplete=\"fname\"\r\n//                 name=\"DeliveryInstructions\"\r\n//                 variant=\"outlined\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"DeliveryInstructions\"\r\n//                 label=\"DeliveryInstructions\"\r\n//                 autoFocus\r\n//               />\r\n//             </Grid>\r\n//           </Grid>\r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             color=\"primary\"\r\n//             className={classes.submit}\r\n//             disabled={isInvalid}\r\n//           >\r\n//             Set Location\r\n//           </Button>\r\n//           <Grid container justify=\"flex-end\">\r\n//             <Grid item>\r\n//               <Link href=\"delet item\" variant=\"body2\">\r\n//                 Did you need to delet item ?\r\n//               </Link>\r\n//             </Grid>\r\n//             <Grid item>\r\n//               <p id=\"accoutCreated\"></p>\r\n//             </Grid>\r\n//           </Grid>\r\n//         </form>\r\n//       </div>\r\n//       <Box mt={5}>\r\n//         <Copyright />\r\n//       </Box>\r\n//     </Container>\r\n//   )\r\n// }\r\n\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n import AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    background: 'rgba(0, 0, 0, 0.94)',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    background: 'rgba(0, 0, 0, 0.79)',\r\n    color: 'white',\r\n  },\r\n}))\r\nexport default function Wtem() {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n // City:req.body.City,\r\n //      Area:req.body.Area,\r\n //      RoadName:req.body.RoadName,\r\n //      BuildingNumber:req.body.BuildingNumber,\r\n //      Floor:req.body.Floor,\r\n //      DeliveryInstructions:req.body.DeliveryInstructions\r\n  const [values, setValues] = React.useState({\r\n    City: '',\r\n    Area: '',\r\n    RoadName: '',\r\n    BuildingNumber:0,\r\n    Floor: '',\r\n    DeliveryInstructions:'',\r\n  })\r\n  const [isOpen, setIsOpen ] = React.useState(false)\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value })\r\n  }\r\n  const onSubmit = async(e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const token = localStorage.getItem('loggedInToken')\r\n      const { City, Area, RoadName, BuildingNumber, Floor,DeliveryInstructions } = values\r\n      const locations = {\r\n        // category,\r\n        // name,\r\n        // price,\r\n        // description,\r\n        // image,\r\n        City, Area, RoadName, BuildingNumber, Floor,DeliveryInstructions\r\n      }\r\nconsole.log(locations)\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n      const bodyParameters = {\r\n        City,\r\n      }\r\n   const result = await axios\r\n      .post('http://localhost:7000/api/location', locations,\r\n      config)\r\n      if (result.status === 201 ) {\r\n        setIsOpen(true)\r\n        setValues(() => ({\r\n          City: '',\r\n          Area: '',\r\n          RoadName: '',\r\n         BuildingNumber:0,\r\n         Floor: '',\r\n         DeliveryInstructions:'',\r\n        }))\r\n      }\r\n    } catch(error){\r\n        console.log(error)\r\n      }\r\n  }\r\n  const isInvalid =\r\n  values.City === \"\" ||\r\n  values.Area  === \"\" ||\r\n  values.RoadName === \"\" ||\r\n  values.BuildingNumber === \"\" ||\r\n  values.Floor === \"\"||\r\n  values.DeliveryInstructions===\"\"\r\n  React.useEffect(() => {\r\n    // there is no token, redirect to login page\r\n    if (localStorage.getItem('loggedInToken') === null) {\r\n      history.push('/login')\r\n    }\r\n  }, [])\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={isOpen}\r\n        onClose={() => {\r\n          setIsOpen(false)\r\n        }}\r\n        key={'top' + 'center'}\r\n        autoHideDuration={6000}\r\n      >\r\n      \r\n      </Snackbar>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}><AddLocationIcon/></Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add your location\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">City</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={values.City}\r\n                  onChange={handleChange('City')}\r\n                >\r\n                 <MenuItem value=\"Amman\">Amman</MenuItem>\r\n                  <MenuItem value=\"Zarqa\">Zarqa</MenuItem>\r\n                  <MenuItem value=\"Salt\">Salt</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                value={values.Area}\r\n                onChange={handleChange('Area')}\r\n                autoComplete=\"fname\"\r\n                name=\"Area\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Area\"\r\n                label=\"Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                value={values.RoadName}\r\n                onChange={handleChange('RoadName')}\r\n                autoComplete=\"fname\"\r\n                name=\"RoadName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"RoadName\"\r\n                label=\"RoadName\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n         <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                value={values.BuildingNumber}\r\n                onChange={handleChange('BuildingNumber')}\r\n                autoComplete=\"fname\"\r\n                name=\"BuildingNumber\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"BuildingNumber\"\r\n                label=\"BuildingNumber\"\r\n                autoFocus\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                value={values.Floor}\r\n                onChange={handleChange('Floor')}\r\n                autoComplete=\"fname\"\r\n                name=\"Floor\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Floor\"\r\n                label=\"Floor\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                value={values.DeliveryInstructions}\r\n                onChange={handleChange('DeliveryInstructions')}\r\n                autoComplete=\"fname\"\r\n                name=\"DeliveryInstructions\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"DeliveryInstructions\"\r\n                label=\"Phone \"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={isInvalid}\r\n          >\r\n            Set Location\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              \r\n            </Grid>\r\n            <Grid item>\r\n              <p id=\"accoutCreated\"></p>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}